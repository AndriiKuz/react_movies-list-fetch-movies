{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","loading","setLoading","query","setQuery","error","setError","previewMovie","setPreviewMovie","handleFindMovie","e","searchQuery","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","video","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae567d42.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nconst PLACEHOLDER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n  const [previewMovie, setPreviewMovie] = useState({} as Movie);\n\n  const handleFindMovie = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    searchQuery: string,\n  ) => {\n    e.preventDefault();\n    setLoading(true);\n\n    getMovie(searchQuery)\n      .then((data) => {\n        if ('Error' in data) {\n          setError(data.Error);\n        } else {\n          const movie = {\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A'\n              ? PLACEHOLDER\n              : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          };\n\n          setPreviewMovie(movie);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleChangeQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setError('');\n  };\n\n  const handleAddMovie = () => {\n    if (previewMovie) {\n      onAddMovie(previewMovie);\n      setPreviewMovie({} as Movie);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': !!error },\n              )}\n              value={query}\n              onChange={handleChangeQuery}\n            />\n          </div>\n\n          {!!error\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!query}\n              onClick={(e) => handleFindMovie(e, query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {previewMovie.title\n              && (\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleAddMovie}\n                >\n                  Add to the list\n                </button>\n              )}\n          </div>\n        </div>\n      </form>\n      {previewMovie.title\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={previewMovie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7c0fa969';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const isExistMovie = (video: Movie) => (\n    movies.some(movie => movie.imdbId === video.imdbId)\n  );\n\n  const onAddMovie = (movie: Movie) => {\n    if (!isExistMovie(movie)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={onAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
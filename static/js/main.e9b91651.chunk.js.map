{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","handleFindMovie","loading","error","previewMovie","setError","setPreviewMovie","useState","query","setQuery","htmlFor","type","id","placeholder","classNames","value","onChange","e","target","disabled","onClick","some","App","setLoading","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9b91651.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void;\n  loading: boolean,\n  error: string,\n  previewMovie: Movie,\n  setPreviewMovie: (value: Movie) => void,\n  setError: (value: string) => void,\n  handleFindMovie: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    query: string\n  ) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies,\n  handleFindMovie,\n  loading,\n  error,\n  previewMovie,\n  setError,\n  setPreviewMovie,\n}) => {\n  const [query, setQuery] = useState('');\n\n  const isExistMovie = () => (\n    movies.some(movie => movie.title === previewMovie.title)\n  );\n\n  const handleChangeQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setError('');\n  };\n\n  const handlerAddMovie = () => {\n    setPreviewMovie({} as Movie);\n    setQuery('');\n    if (!isExistMovie()) {\n      setMovies([...movies, previewMovie]);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': !!error },\n              )}\n              value={query}\n              onChange={handleChangeQuery}\n            />\n          </div>\n\n          {!!error\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!query}\n              onClick={(e) => handleFindMovie(e, query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {previewMovie.title\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handlerAddMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {previewMovie.title && <MovieCard movie={previewMovie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\n// import { ResponseError } from './types/ReponseError';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [previewMovie, setPreviewMovie] = useState({} as Movie);\n\n  const handleFindMovie = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    query: string,\n  ) => {\n    e.preventDefault();\n    setLoading(true);\n    getMovie(query)\n      .then((data) => {\n        if ('Error' in data) {\n          setError(data.Error);\n        } else {\n          const movie = {\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          };\n\n          setPreviewMovie(movie);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          handleFindMovie={handleFindMovie}\n          loading={loading}\n          error={error}\n          setError={setError}\n          previewMovie={previewMovie}\n          setPreviewMovie={setPreviewMovie}\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7c0fa969';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}